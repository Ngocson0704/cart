{"ast":null,"code":"var _jsxFileName = \"/home/ngocson/Documents/cart/src/containers/ProductsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Products from './../components/Products';\nimport Product from './../components/Product';\nimport PropTypes from 'prop-types';\nimport { actAddToCart } from './../actions/index';\nimport products from '../reducers/products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductsContainer extends Component {\n  render() {\n    var {\n      products\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Products, {\n      children: this.showProducts(products)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  showProducts(products) {\n    var result = null;\n    var {\n      onAddToCart\n    } = this.props;\n\n    if (products.length > 0) {\n      result = products.map((product, index) => {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 24\n        }, this);\n      });\n    }\n\n    return result;\n  }\n\n}\n\nProductsContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired,\n    rating: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onAddToCart: product => {\n      dispatch(action.actAddToCart(product, 1));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsContainer);","map":{"version":3,"sources":["/home/ngocson/Documents/cart/src/containers/ProductsContainer.js"],"names":["React","Component","connect","Products","Product","PropTypes","actAddToCart","products","ProductsContainer","render","props","showProducts","result","onAddToCart","length","map","product","index","propTypes","arrayOf","shape","id","number","isRequired","name","string","image","description","price","inventory","rating","mapStateToProps","state","mapDispatchToProps","dispatch","action"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,iBAAN,SAAgCP,SAAhC,CAA0C;AACtCQ,EAAAA,MAAM,GAAG;AACL,QAAI;AAACF,MAAAA;AAAD,QAAW,KAAKG,KAApB;AACA,wBACI,QAAC,QAAD;AAAA,gBAAW,KAAKC,YAAL,CAAkBJ,QAAlB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AACDI,EAAAA,YAAY,CAACJ,QAAD,EAAU;AAClB,QAAIK,MAAM,GAAE,IAAZ;AACA,QAAI;AAACC,MAAAA;AAAD,QAAc,KAAKH,KAAvB;;AACA,QAAGH,QAAQ,CAACO,MAAT,GAAgB,CAAnB,EAAqB;AACjBF,MAAAA,MAAM,GAACL,QAAQ,CAACQ,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAkB;AAClC,4BAAO,QAAC,OAAD;AAEH,UAAA,OAAO,EAAED;AAFN,WACEC,KADF;AAAA;AAAA;AAAA;AAAA,gBAAP;AAIH,OALM,CAAP;AAMH;;AACD,WAAOL,MAAP;AACH;;AAnBqC;;AAsB1CJ,iBAAiB,CAACU,SAAlB,GAA4B;AACxBX,EAAAA,QAAQ,EAAEF,SAAS,CAACc,OAAV,CACNd,SAAS,CAACe,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAChB,SAAS,CAACiB,MAAV,CAAiBC,UADR;AAEZC,IAAAA,IAAI,EAAEnB,SAAS,CAACoB,MAAV,CAAiBF,UAFX;AAGZG,IAAAA,KAAK,EAAErB,SAAS,CAACoB,MAAV,CAAiBF,UAHZ;AAIZI,IAAAA,WAAW,EAAEtB,SAAS,CAACoB,MAAV,CAAiBF,UAJlB;AAKZK,IAAAA,KAAK,EAAEvB,SAAS,CAACiB,MAAV,CAAiBC,UALZ;AAMZM,IAAAA,SAAS,EAAExB,SAAS,CAACiB,MAAV,CAAiBC,UANhB;AAOZO,IAAAA,MAAM,EAAEzB,SAAS,CAACiB,MAAV,CAAiBC;AAPb,GAAhB,CADM,EAURA;AAXsB,CAA5B;;AAeA,MAAMQ,eAAe,GAACC,KAAK,IAAE;AACzB,SAAM;AACFzB,IAAAA,QAAQ,EAAEyB,KAAK,CAACzB;AADd,GAAN;AAGH,CAJD;;AAMA,MAAM0B,kBAAkB,GAAC,CAACC,QAAD,EAAWxB,KAAX,KAAmB;AACxC,SAAO;AACHG,IAAAA,WAAW,EAAEG,OAAD,IAAW;AACnBkB,MAAAA,QAAQ,CAACC,MAAM,CAAC7B,YAAP,CAAoBU,OAApB,EAA6B,CAA7B,CAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAed,OAAO,CAAC6B,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CzB,iBAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Products from './../components/Products'\nimport Product from './../components/Product';\nimport PropTypes from 'prop-types';\nimport {actAddToCart} from './../actions/index'\nimport products from '../reducers/products';\n\nclass ProductsContainer extends Component {\n    render() {\n        var {products}=this.props;\n        return (\n            <Products>{this.showProducts(products)}</Products>\n        );\n    }\n    showProducts(products){\n        var result =null;\n        var {onAddToCart}=this.props\n        if(products.length>0){\n            result=products.map((product, index)=>{\n                return <Product \n                    key={index}\n                    product={product}\n                ></Product>\n            })\n        }\n        return result\n    }\n}\n\nProductsContainer.propTypes={\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            id:PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price: PropTypes.number.isRequired,\n            inventory: PropTypes.number.isRequired,\n            rating: PropTypes.number.isRequired,\n        })\n    ).isRequired\n}\n\n\nconst mapStateToProps=state=>{\n    return{\n        products: state.products\n    }\n}\n\nconst mapDispatchToProps=(dispatch, props)=>{\n    return {\n        onAddToCart:(product)=>{\n            dispatch(action.actAddToCart(product, 1))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ProductsContainer);\n"]},"metadata":{},"sourceType":"module"}