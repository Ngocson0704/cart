{"ast":null,"code":"var _jsxFileName = \"/home/ngocson/Documents/cart/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './../components/Cart';\nimport * as Message from './../constants/Message';\nimport CartItem from './../components/CartItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      var result = Message.MSG_CART_EMPTY;\n\n      if (cart.length > 0) {\n        result = cart.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(CartItem, {\n            item: item,\n            index: index\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this);\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var {\n      cart\n    } = this.props;\n    console.log(cart);\n    return /*#__PURE__*/_jsxDEV(Cart, {\n      children: [this.showCartItem(cart), this.showTotalAmount(cart)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nexport default connect(mapStateToProps, null)(CartContainer);","map":{"version":3,"sources":["/home/ngocson/Documents/cart/src/containers/CartContainer.js"],"names":["React","Component","connect","PropTypes","Cart","Message","CartItem","CartContainer","showCartItem","cart","result","MSG_CART_EMPTY","length","map","item","index","render","props","console","log","showTotalAmount","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAWlCO,YAXkC,GAWpBC,IAAD,IAAQ;AACjB,UAAIC,MAAM,GAAGL,OAAO,CAACM,cAArB;;AACA,UAAGF,IAAI,CAACG,MAAL,GAAY,CAAf,EAAiB;AACbF,QAAAA,MAAM,GAACD,IAAI,CAACI,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC1B,8BACI,QAAC,QAAD;AAEI,YAAA,IAAI,EAAED,IAFV;AAGI,YAAA,KAAK,EAAEC;AAHX,aACSA,KADT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARM,CAAP;AASH;;AACD,aAAOL,MAAP;AAEH,KA1BiC;AAAA;;AAClCM,EAAAA,MAAM,GAAG;AACL,QAAI;AAACP,MAAAA;AAAD,QAAO,KAAKQ,KAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,wBACI,QAAC,IAAD;AAAA,iBACK,KAAKD,YAAL,CAAkBC,IAAlB,CADL,EAEK,KAAKW,eAAL,CAAqBX,IAArB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAViC;;AA6BtCF,aAAa,CAACc,SAAd,GAAwB;AACpBZ,EAAAA,IAAI,EAAEN,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,KAAV,CAAgB;AACpCC,IAAAA,OAAO,EAACrB,SAAS,CAACoB,KAAV,CAAgB;AACpBE,MAAAA,EAAE,EAACtB,SAAS,CAACuB,MAAV,CAAiBC,UADA;AAEpBC,MAAAA,IAAI,EAAEzB,SAAS,CAAC0B,MAAV,CAAiBF,UAFH;AAGpBG,MAAAA,KAAK,EAAE3B,SAAS,CAAC0B,MAAV,CAAiBF,UAHJ;AAIpBI,MAAAA,WAAW,EAAE5B,SAAS,CAAC0B,MAAV,CAAiBF,UAJV;AAKpBK,MAAAA,KAAK,EAAE7B,SAAS,CAACuB,MAAV,CAAiBC,UALJ;AAMpBM,MAAAA,SAAS,EAAE9B,SAAS,CAACuB,MAAV,CAAiBC,UANR;AAOpBO,MAAAA,MAAM,EAAE/B,SAAS,CAACuB,MAAV,CAAiBC;AAPL,KAAhB,EAQLA,UATiC;AAUpCQ,IAAAA,QAAQ,EAAChC,SAAS,CAACuB,MAAV,CAAiBC;AAVU,GAAhB,CAAlB,EAWFA;AAZgB,CAAxB;;AAeA,MAAMS,eAAe,GAACC,KAAK,IAAE;AACzB,SAAM;AACF5B,IAAAA,IAAI,EAAC4B,KAAK,CAAC5B;AADT,GAAN;AAGH,CAJD;;AASA,eAAeP,OAAO,CAACkC,eAAD,EAAiB,IAAjB,CAAP,CAA8B7B,aAA9B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './../components/Cart';\nimport * as Message from './../constants/Message';\nimport CartItem from './../components/CartItem';\n\nclass CartContainer extends Component {\n    render() {\n        var {cart}=this.props;\n        console.log(cart)\n        return (\n            <Cart>\n                {this.showCartItem(cart)}\n                {this.showTotalAmount(cart)}\n            </Cart>\n        );\n    }\n    showCartItem=(cart)=>{\n        var result = Message.MSG_CART_EMPTY;\n        if(cart.length>0){\n            result=cart.map((item,index)=>{\n                return (\n                    <CartItem\n                        key={index}\n                        item={item}\n                        index={index}\n                    ></CartItem>\n                )\n            })\n        }\n        return result;\n\n    }\n}\n\nCartContainer.propTypes={\n    cart: PropTypes.arrayOf(PropTypes.shape({\n        product:PropTypes.shape({\n            id:PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price: PropTypes.number.isRequired,\n            inventory: PropTypes.number.isRequired,\n            rating: PropTypes.number.isRequired,\n        }).isRequired,\n        quantity:PropTypes.number.isRequired\n    })).isRequired\n}\n\nconst mapStateToProps=state=>{\n    return{\n        cart:state.cart\n    }\n}\n\n\n\n\nexport default connect(mapStateToProps,null)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}