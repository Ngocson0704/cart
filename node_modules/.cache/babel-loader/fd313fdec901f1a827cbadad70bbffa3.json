{"ast":null,"code":"var _jsxFileName = \"/home/ngocson/Documents/cart/src/containers/ProductsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Products from './../components/Products';\nimport Product from './../components/Product';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductsContainer extends Component {\n  render() {\n    var {\n      products\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Products, {\n      children: this.showProducts(products)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n  showProducts(products) {\n    var result = null;\n\n    if (products.length > 0) {\n      result = products.map((product, index) => {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }, this);\n      });\n    }\n\n    return result;\n  }\n\n}\n\nProductsContainer.propsTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    price: PropTypes.string.isRequired,\n    inventory: PropTypes.string.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nexport default connect(mapStateToProps, null)(ProductsContainer);","map":{"version":3,"sources":["/home/ngocson/Documents/cart/src/containers/ProductsContainer.js"],"names":["React","Component","connect","Products","Product","PropTypes","ProductsContainer","render","products","props","showProducts","result","length","map","product","index","propsTypes","arrayOf","shape","id","string","isRequired","name","image","description","price","inventory","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AACtCM,EAAAA,MAAM,GAAG;AACL,QAAI;AAACC,MAAAA;AAAD,QAAW,KAAKC,KAApB;AACA,wBACI,QAAC,QAAD;AAAA,gBAAW,KAAKC,YAAL,CAAkBF,QAAlB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AACDE,EAAAA,YAAY,CAACF,QAAD,EAAU;AAClB,QAAIG,MAAM,GAAE,IAAZ;;AACA,QAAGH,QAAQ,CAACI,MAAT,GAAgB,CAAnB,EAAqB;AACjBD,MAAAA,MAAM,GAACH,QAAQ,CAACK,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAkB;AAClC,4BAAO,QAAC,OAAD;AAEH,UAAA,OAAO,EAAED;AAFN,WACEC,KADF;AAAA;AAAA;AAAA;AAAA,gBAAP;AAIH,OALM,CAAP;AAMH;;AACD,WAAOJ,MAAP;AACH;;AAlBqC;;AAqB1CL,iBAAiB,CAACU,UAAlB,GAA6B;AACzBR,EAAAA,QAAQ,EAAEH,SAAS,CAACY,OAAV,CACNZ,SAAS,CAACa,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAACd,SAAS,CAACe,MAAV,CAAiBC,UADR;AAEZC,IAAAA,IAAI,EAAEjB,SAAS,CAACe,MAAV,CAAiBC,UAFX;AAGZE,IAAAA,KAAK,EAAElB,SAAS,CAACe,MAAV,CAAiBC,UAHZ;AAIZG,IAAAA,WAAW,EAAEnB,SAAS,CAACe,MAAV,CAAiBC,UAJlB;AAKZI,IAAAA,KAAK,EAAEpB,SAAS,CAACe,MAAV,CAAiBC,UALZ;AAMZK,IAAAA,SAAS,EAAErB,SAAS,CAACe,MAAV,CAAiBC;AANhB,GAAhB,CADM,EAWRA;AAZuB,CAA7B;;AAgBA,MAAMM,eAAe,GAACC,KAAK,IAAE;AACzB,SAAM;AACFpB,IAAAA,QAAQ,EAAEoB,KAAK,CAACpB;AADd,GAAN;AAGH,CAJD;;AAOA,eAAeN,OAAO,CAACyB,eAAD,EAAiB,IAAjB,CAAP,CAA8BrB,iBAA9B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Products from './../components/Products'\nimport Product from './../components/Product';\nimport PropTypes from 'prop-types';\n\nclass ProductsContainer extends Component {\n    render() {\n        var {products}=this.props;\n        return (\n            <Products>{this.showProducts(products)}</Products>\n        );\n    }\n    showProducts(products){\n        var result =null;\n        if(products.length>0){\n            result=products.map((product, index)=>{\n                return <Product \n                    key={index}\n                    product={product}\n                ></Product>\n            })\n        }\n        return result\n    }\n}\n\nProductsContainer.propsTypes={\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            id:PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price: PropTypes.string.isRequired,\n            inventory: PropTypes.string.isRequired,\n            \n\n        })\n    ).isRequired\n}\n\n\nconst mapStateToProps=state=>{\n    return{\n        products: state.products\n    }\n}\n\n\nexport default connect(mapStateToProps,null)(ProductsContainer);\n"]},"metadata":{},"sourceType":"module"}