{"ast":null,"code":"var _jsxFileName = \"/home/ngocson/Documents/cart/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './../components/Cart';\nimport * as Message from './../constants/Message';\nimport CartItem from './../components/CartItem';\nimport CartResult from './../components/CartResult';\nimport { actChangeMessage, actDeleteProductInCart, actUpdateProductInCart } from './../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      var {\n        onDeleteProductInCart,\n        onUpdateProductInCart,\n        onChangeMessage\n      } = this.props;\n\n      var result = /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Message.MSG_CART_EMPTY\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 22\n      }, this);\n\n      if (cart.length > 0) {\n        result = cart.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(CartItem, {\n            item: item,\n            index: index,\n            onChangeMessage: onChangeMessage,\n            onDeleteProductInCart: onDeleteProductInCart\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this);\n        });\n      }\n\n      return result;\n    };\n\n    this.showTotalAmount = cart => {\n      var result = null;\n\n      if (cart.length > 0) {\n        result = /*#__PURE__*/_jsxDEV(CartResult, {\n          cart: cart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }, this);\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var {\n      cart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Cart, {\n      children: [this.showCartItem(cart), this.showTotalAmount(cart)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onDeleteProductInCart: product => {\n      dispatch(actDeleteProductInCart(product));\n    },\n    onChangeMessage: message => {\n      dispatch(actChangeMessage(message));\n    },\n    onUpdateProductInCart: () => {\n      dispatch(actUpdateProductInCart(product, quantity));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/home/ngocson/Documents/cart/src/containers/CartContainer.js"],"names":["React","Component","connect","PropTypes","Cart","Message","CartItem","CartResult","actChangeMessage","actDeleteProductInCart","actUpdateProductInCart","CartContainer","showCartItem","cart","onDeleteProductInCart","onUpdateProductInCart","onChangeMessage","props","result","MSG_CART_EMPTY","length","map","item","index","showTotalAmount","render","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","mapStateToProps","state","mapDispatchToProps","dispatch","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './../components/Cart';\nimport * as Message from './../constants/Message';\nimport CartItem from './../components/CartItem';\nimport CartResult from './../components/CartResult';\nimport {actChangeMessage, actDeleteProductInCart, actUpdateProductInCart} from './../actions/index'\n\nclass CartContainer extends Component {\n    render() {\n        var {cart}=this.props;\n        return (\n            <Cart>\n                {this.showCartItem(cart)}\n                {this.showTotalAmount(cart)}\n            </Cart>\n        );\n    }\n    showCartItem=(cart)=>{\n        var {onDeleteProductInCart, onUpdateProductInCart,onChangeMessage}=this.props;\n        var result = <tr><td>\n            {Message.MSG_CART_EMPTY}\n        </td></tr>;\n        if(cart.length>0){\n            result=cart.map((item,index)=>{\n                return (\n                    <CartItem\n                        key={index}\n                        item={item}\n                        index={index}\n                        onChangeMessage={onChangeMessage}\n                        onDeleteProductInCart={onDeleteProductInCart}\n                    ></CartItem>\n                )\n            })\n        }\n        return result;\n\n    }\n\n    showTotalAmount=(cart)=>{\n        var result = null;\n        if(cart.length>0){\n            result=<CartResult cart={cart}></CartResult>\n        }\n        return result;\n    }\n}\n\nCartContainer.propTypes={\n    cart: PropTypes.arrayOf(PropTypes.shape({\n        product:PropTypes.shape({\n            id:PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price: PropTypes.number.isRequired,\n            inventory: PropTypes.number.isRequired,\n            rating: PropTypes.number.isRequired,\n        }).isRequired,\n        quantity:PropTypes.number.isRequired\n    })).isRequired\n}\n\nconst mapStateToProps=state=>{\n    return{\n        cart:state.cart\n    }\n}\n\nconst mapDispatchToProps=(dispatch,props)=>{\n    return{\n        onDeleteProductInCart:(product)=>{\n            dispatch(actDeleteProductInCart(product));\n        },\n        onChangeMessage:(message)=>{\n            dispatch(actChangeMessage(message))\n        },\n        onUpdateProductInCart:()=>{\n            dispatch(actUpdateProductInCart(product, quantity))\n        }\n    }\n}\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}